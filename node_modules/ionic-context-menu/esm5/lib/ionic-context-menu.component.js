/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { PopoverController } from '@ionic/angular';
import { IonicContextMenuContentComponent } from './ionic-context-menu-content.component';
var IonicContextMenuComponent = /** @class */ (function () {
    function IonicContextMenuComponent(popoverCtrl) {
        this.popoverCtrl = popoverCtrl;
    }
    /**
     * @param {?} child
     * @return {?}
     */
    IonicContextMenuComponent.prototype.present = /**
     * @param {?} child
     * @return {?}
     */
    function (child) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.popoverCtrl.create({
                                component: IonicContextMenuContentComponent,
                                componentProps: {
                                    template: child
                                },
                                event: event,
                                translucent: true
                            })];
                    case 1:
                        _a.popover = _b.sent();
                        return [4 /*yield*/, this.popover.present()];
                    case 2: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    IonicContextMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ionic-context-menu',
                    template: "\n    <div>\n      <ion-button (click)=\"present(template)\">\n        <ion-icon slot=\"end\" [name]=\"icon || 'more'\"></ion-icon>\n      </ion-button>\n      <ng-template #template>\n        <div (click)=\"popover.dismiss()\">\n          <ng-content></ng-content>\n        </div>\n      </ng-template>\n    </div>\n  ",
                    styles: []
                },] },
    ];
    /** @nocollapse */
    IonicContextMenuComponent.ctorParameters = function () { return [
        { type: PopoverController }
    ]; };
    IonicContextMenuComponent.propDecorators = {
        icon: [{ type: Input }]
    };
    return IonicContextMenuComponent;
}());
export { IonicContextMenuComponent };
if (false) {
    /** @type {?} */
    IonicContextMenuComponent.prototype.popover;
    /** @type {?} */
    IonicContextMenuComponent.prototype.icon;
    /** @type {?} */
    IonicContextMenuComponent.prototype.popoverCtrl;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uaWMtY29udGV4dC1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lvbmljLWNvbnRleHQtbWVudS8iLCJzb3VyY2VzIjpbImxpYi9pb25pYy1jb250ZXh0LW1lbnUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7O0lBc0J4RixtQ0FBb0IsV0FBOEI7UUFBOUIsZ0JBQVcsR0FBWCxXQUFXLENBQW1CO0tBQUs7Ozs7O0lBRWpELDJDQUFPOzs7O0lBQWIsVUFBYyxLQUFLOzs7Ozs7d0JBQ2pCLEtBQUEsSUFBSSxDQUFBO3dCQUFXLHFCQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO2dDQUMzQyxTQUFTLEVBQUUsZ0NBQWdDO2dDQUMzQyxjQUFjLEVBQUU7b0NBQ2QsUUFBUSxFQUFFLEtBQUs7aUNBQ2hCO2dDQUNELEtBQUssT0FBQTtnQ0FDTCxXQUFXLEVBQUUsSUFBSTs2QkFDbEIsQ0FBQyxFQUFBOzt3QkFQRixHQUFLLE9BQU8sR0FBRyxTQU9iLENBQUM7d0JBQ0kscUJBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsRUFBQTs0QkFBbkMsc0JBQU8sU0FBNEIsRUFBQzs7OztLQUNyQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUsaVVBV1Q7b0JBQ0QsTUFBTSxFQUFFLEVBQUU7aUJBQ1g7Ozs7Z0JBbEJRLGlCQUFpQjs7O3VCQXFCdkIsS0FBSzs7b0NBdEJSOztTQW9CYSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvcG92ZXJDb250cm9sbGVyIH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xyXG5pbXBvcnQgeyBJb25pY0NvbnRleHRNZW51Q29udGVudENvbXBvbmVudCB9IGZyb20gJy4vaW9uaWMtY29udGV4dC1tZW51LWNvbnRlbnQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaW9uaWMtY29udGV4dC1tZW51JyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdj5cclxuICAgICAgPGlvbi1idXR0b24gKGNsaWNrKT1cInByZXNlbnQodGVtcGxhdGUpXCI+XHJcbiAgICAgICAgPGlvbi1pY29uIHNsb3Q9XCJlbmRcIiBbbmFtZV09XCJpY29uIHx8ICdtb3JlJ1wiPjwvaW9uLWljb24+XHJcbiAgICAgIDwvaW9uLWJ1dHRvbj5cclxuICAgICAgPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZT5cclxuICAgICAgICA8ZGl2IChjbGljayk9XCJwb3BvdmVyLmRpc21pc3MoKVwiPlxyXG4gICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgPC9kaXY+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJb25pY0NvbnRleHRNZW51Q29tcG9uZW50IHtcclxuICBwb3BvdmVyOiBIVE1MSW9uUG9wb3ZlckVsZW1lbnQ7XHJcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBvcG92ZXJDdHJsOiBQb3BvdmVyQ29udHJvbGxlcikgeyB9XHJcblxyXG4gIGFzeW5jIHByZXNlbnQoY2hpbGQpIHtcclxuICAgIHRoaXMucG9wb3ZlciA9IGF3YWl0IHRoaXMucG9wb3ZlckN0cmwuY3JlYXRlKHtcclxuICAgICAgY29tcG9uZW50OiBJb25pY0NvbnRleHRNZW51Q29udGVudENvbXBvbmVudCxcclxuICAgICAgY29tcG9uZW50UHJvcHM6IHtcclxuICAgICAgICB0ZW1wbGF0ZTogY2hpbGRcclxuICAgICAgfSxcclxuICAgICAgZXZlbnQsXHJcbiAgICAgIHRyYW5zbHVjZW50OiB0cnVlXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLnBvcG92ZXIucHJlc2VudCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19