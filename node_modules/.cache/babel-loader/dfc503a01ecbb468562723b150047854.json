{"ast":null,"code":"var _jsxFileName = \"/Users/oliverstevenson/Documents/React/Ionic-Frank-Allart-App/src/pages/ProductGallery.tsx\";\nimport React, { useState } from 'react';\nimport { IonContent, IonList, IonPage, IonRefresher, IonRefresherContent, useIonViewWillEnter, IonThumbnail, IonLabel } from '@ionic/react';\nimport '../styles/AllartSelectStyle.css';\nimport '../styles/base/utility.css'; // import ProductImagesItem from '../components/ProductImagesItem'\n\nimport { getProductImages } from '../data/ProductImages';\nimport Header from '../components/Header';\nimport ProductSlider from '../components/ProductSlider';\nimport ProductThumbnail from '../components/ProductThumbnail';\n\nconst ProductGallery = ({\n  match\n}) => {\n  const [ProductImages, setProductImages] = useState([]);\n  const [sliderIsOpen, setSliderIsOpen] = useState(false);\n  const filteredImages = ProductImages.filter(pi => pi.pageName === match.params.imagesListID);\n  const numImages = filteredImages.length;\n  const imagesListID = match.params.imagesListID;\n  useIonViewWillEnter(() => {\n    const pimg = getProductImages();\n    setProductImages(pimg);\n  });\n\n  const refresh = e => {\n    setTimeout(() => e.detail.complete(), 3000);\n  };\n\n  const handleOpenSlider = () => {\n    setSliderIsOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    id: \"product-gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    heading: imagesListID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonRefresher, {\n    slot: \"fixed\",\n    onIonRefresh: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRefresherContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IonList, {\n    id: \"productGalleryTitles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonThumbnail, {\n    id: \"productGalleryTitleImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, imagesListID)), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, numImages, \" Photos\"))), /*#__PURE__*/React.createElement(IonList, {\n    id: \"productGalleryls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, filteredImages.map(image => /*#__PURE__*/React.createElement(ProductThumbnail, {\n    key: image.id,\n    id: image.id,\n    src: image.src,\n    handleOpenSlider: handleOpenSlider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }))), sliderIsOpen && /*#__PURE__*/React.createElement(ProductSlider, {\n    slides: filteredImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }\n  })));\n};\n\nexport default ProductGallery;","map":{"version":3,"sources":["/Users/oliverstevenson/Documents/React/Ionic-Frank-Allart-App/src/pages/ProductGallery.tsx"],"names":["React","useState","IonContent","IonList","IonPage","IonRefresher","IonRefresherContent","useIonViewWillEnter","IonThumbnail","IonLabel","getProductImages","Header","ProductSlider","ProductThumbnail","ProductGallery","match","ProductImages","setProductImages","sliderIsOpen","setSliderIsOpen","filteredImages","filter","pi","pageName","params","imagesListID","numImages","length","pimg","refresh","e","setTimeout","detail","complete","handleOpenSlider","map","image","id","src"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  IonContent,\n  IonHeader,\n  IonList,\n  IonPage,\n  IonRefresher,\n  IonRefresherContent,\n  IonTitle,\n  IonToolbar,\n  useIonViewWillEnter,\n  IonButtons,\n  IonThumbnail,\n  IonImg,\n  IonLabel,\n  IonButton,\n  IonIcon,\n  IonPopover,\n  IonItem\n} from '@ionic/react'\nimport '../styles/AllartSelectStyle.css'\nimport '../styles/base/utility.css'\n// import ProductImagesItem from '../components/ProductImagesItem'\nimport { Images, getProductImages } from '../data/ProductImages'\nimport { RouteComponentProps } from 'react-router-dom'\nimport Header from '../components/Header'\nimport ProductSlider from '../components/ProductSlider'\nimport ProductThumbnail from '../components/ProductThumbnail'\n\ninterface ProductGalleryProps extends RouteComponentProps<{\n  imagesListID: string\n}> {}\n\nconst ProductGallery: React.FC<ProductGalleryProps> = ({ match }) => {\n  const [ProductImages, setProductImages] = useState<Images[]>([])\n  const [sliderIsOpen, setSliderIsOpen] = useState(false)\n  const filteredImages = ProductImages.filter((pi) => pi.pageName === match.params.imagesListID)\n  const numImages = filteredImages.length\n  const imagesListID = match.params.imagesListID\n\n  useIonViewWillEnter(() => {\n    const pimg = getProductImages()\n    setProductImages(pimg)\n  })\n\n  const refresh = (e: CustomEvent) => {\n    setTimeout(() => e.detail.complete(), 3000)\n  }\n\n  const handleOpenSlider = () => {\n    setSliderIsOpen(true)\n  }\n\n  return (\n    <IonPage id=\"product-gallery\">\n      <Header heading={imagesListID} />\n      <IonContent>\n        <IonRefresher slot=\"fixed\" onIonRefresh={refresh}>\n          <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n        <IonList id=\"productGalleryTitles\">\n          <IonThumbnail id=\"productGalleryTitleImg\">\n            {/* <IonImg alt={imagesListID} src={`assets/menu-images/${imagesListID.substring(0,2)}.png`}/> */}\n          </IonThumbnail>\n          <IonLabel><p>{imagesListID}</p></IonLabel>\n          <IonLabel><p>{numImages} Photos</p></IonLabel>\n        </IonList>\n        <IonList id=\"productGalleryls\">\n          {filteredImages.map(image => (\n            <ProductThumbnail\n              key={image.id}\n              id={image.id}\n              src={image.src}\n              handleOpenSlider={handleOpenSlider}\n            />\n          ))}\n        </IonList>\n        {sliderIsOpen && <ProductSlider slides={filteredImages} />}\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default ProductGallery\n"]},"metadata":{},"sourceType":"module"}