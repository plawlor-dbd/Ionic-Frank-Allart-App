{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\n\nvar SocialSharing =\n/** @class */\nfunction (_super) {\n  __extends(SocialSharing, _super);\n\n  function SocialSharing() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SocialSharing.prototype.share = function (message, subject, file, url) {\n    return cordova(this, \"share\", {\n      \"successIndex\": 4,\n      \"errorIndex\": 5\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareWithOptions = function (options) {\n    return cordova(this, \"shareWithOptions\", {\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.canShareVia = function (appName, message, subject, image, url) {\n    return cordova(this, \"canShareVia\", {\n      \"successIndex\": 5,\n      \"errorIndex\": 6,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaTwitter = function (message, image, url) {\n    return cordova(this, \"shareViaTwitter\", {\n      \"successIndex\": 3,\n      \"errorIndex\": 4,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaFacebook = function (message, image, url) {\n    return cordova(this, \"shareViaFacebook\", {\n      \"successIndex\": 3,\n      \"errorIndex\": 4,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaFacebookWithPasteMessageHint = function (message, image, url, pasteMessageHint) {\n    return cordova(this, \"shareViaFacebookWithPasteMessageHint\", {\n      \"successIndex\": 4,\n      \"errorIndex\": 5,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaInstagram = function (message, image) {\n    return cordova(this, \"shareViaInstagram\", {\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaWhatsApp = function (message, image, url) {\n    return cordova(this, \"shareViaWhatsApp\", {\n      \"successIndex\": 3,\n      \"errorIndex\": 4,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaWhatsAppToReceiver = function (receiver, message, image, url) {\n    return cordova(this, \"shareViaWhatsAppToReceiver\", {\n      \"successIndex\": 4,\n      \"errorIndex\": 5,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaSMS = function (messge, phoneNumber) {\n    return cordova(this, \"shareViaSMS\", {\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.canShareViaEmail = function () {\n    return cordova(this, \"canShareViaEmail\", {\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareViaEmail = function (message, subject, to, cc, bcc, files) {\n    return cordova(this, \"shareViaEmail\", {\n      \"platforms\": [\"iOS\", \"Android\"],\n      \"successIndex\": 6,\n      \"errorIndex\": 7\n    }, arguments);\n  };\n\n  SocialSharing.prototype.shareVia = function (appName, message, subject, image, url) {\n    return cordova(this, \"shareVia\", {\n      \"successIndex\": 5,\n      \"errorIndex\": 6,\n      \"platforms\": [\"iOS\", \"Android\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.setIPadPopupCoordinates = function (targetBounds) {\n    return cordova(this, \"setIPadPopupCoordinates\", {\n      \"sync\": true,\n      \"platforms\": [\"iOS\"]\n    }, arguments);\n  };\n\n  SocialSharing.prototype.saveToPhotoAlbum = function (fileOrFileArray) {\n    return cordova(this, \"saveToPhotoAlbum\", {\n      \"platforms\": [\"iOS\"]\n    }, arguments);\n  };\n\n  SocialSharing.pluginName = \"SocialSharing\";\n  SocialSharing.plugin = \"cordova-plugin-x-socialsharing\";\n  SocialSharing.pluginRef = \"plugins.socialsharing\";\n  SocialSharing.repo = \"https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin\";\n  SocialSharing.platforms = [\"Android\", \"Browser\", \"iOS\", \"Windows\", \"Windows Phone\"];\n  SocialSharing = __decorate([Injectable()], SocialSharing);\n  return SocialSharing;\n}(IonicNativePlugin);\n\nexport { SocialSharing };","map":{"version":3,"sources":["../../../../../src/@ionic-native/plugins/social-sharing/ngx/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Social Sharing\n * @premier social-sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#5-web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing/ngx';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\n@Plugin({\n  pluginName: 'SocialSharing',\n  plugin: 'cordova-plugin-x-socialsharing',\n  pluginRef: 'plugins.socialsharing',\n  repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone'],\n})\n@Injectable()\nexport class SocialSharing extends IonicNativePlugin {\n  /**\n   * Shares using the share sheet\n   * @param message {string} The message you would like to share.\n   * @param subject {string} The subject\n   * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n   * @param url {string} A URL to share\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n  })\n  share(message?: string, subject?: string, file?: string | string[], url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n   * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareWithOptions(options: {\n    message?: string;\n    subject?: string;\n    files?: string | string[];\n    url?: string;\n    chooserTitle?: string;\n  }): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via a specific app.\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  canShareVia(appName: string, message?: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Twitter\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaTwitter(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebook(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook with a paste message hint\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @param pasteMessageHint {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebookWithPasteMessageHint(\n    message: string,\n    image?: string,\n    url?: string,\n    pasteMessageHint?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Instagram\n   * @param message {string}\n   * @param image {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaInstagram(message: string, image: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to WhatsApp\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsApp(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact\n   * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n   * @param message {string} Message to send\n   * @param image {string} Image to send (does not work on iOS\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsAppToReceiver(receiver: string, message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via SMS\n   * @param messge {string} message to send\n   * @param phoneNumber {string} Number or multiple numbers seperated by commas\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaSMS(messge: string, phoneNumber: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via email\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  canShareViaEmail(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via Email\n   * @param message {string}\n   * @param subject {string}\n   * @param to {string[]}\n   * @param cc {string[]} Optional\n   * @param bcc {string[]} Optional\n   * @param files {string|string[]} Optional URL or local path to file(s) to attach\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n    successIndex: 6,\n    errorIndex: 7,\n  })\n  shareViaEmail(\n    message: string,\n    subject: string,\n    to: string[],\n    cc?: string[],\n    bcc?: string[],\n    files?: string | string[]\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via AppName\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  shareVia(appName: string, message: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * defines the popup position before call the share method.\n   * @param targetBounds {string} left, top, width, height\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS'],\n  })\n  setIPadPopupCoordinates(targetBounds: string): void {}\n\n  /**\n   * Save an array of images to the camera roll\n   * @param  {string|string[]} fileOrFileArray Single or multiple files\n   * @returns {Promise<any> }\n   */\n  @Cordova({\n    platforms: ['iOS'],\n  })\n  saveToPhotoAlbum(fileOrFileArray: string | string[]): Promise<any> {\n    return;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}