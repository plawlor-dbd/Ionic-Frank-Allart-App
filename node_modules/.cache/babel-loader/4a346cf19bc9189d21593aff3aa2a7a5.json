{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { IonicNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\n\nvar AppRateOriginal =\n/** @class */\nfunction (_super) {\n  __extends(AppRateOriginal, _super);\n\n  function AppRateOriginal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AppRateOriginal.prototype.promptForRating = function (immediately) {\n    return cordova(this, \"promptForRating\", {}, arguments);\n  };\n\n  AppRateOriginal.prototype.navigateToAppStore = function () {\n    return cordova(this, \"navigateToAppStore\", {}, arguments);\n  };\n\n  Object.defineProperty(AppRateOriginal.prototype, \"preferences\", {\n    get: function get() {\n      return cordovaPropertyGet(this, \"preferences\");\n    },\n    set: function set(value) {\n      cordovaPropertySet(this, \"preferences\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AppRateOriginal.pluginName = \"AppRate\";\n  AppRateOriginal.plugin = \"cordova-plugin-apprate\";\n  AppRateOriginal.pluginRef = \"AppRate\";\n  AppRateOriginal.repo = \"https://github.com/pushandplay/cordova-plugin-apprate\";\n  AppRateOriginal.platforms = [\"Android\", \"BlackBerry 10\", \"iOS\", \"Windows\"];\n  return AppRateOriginal;\n}(IonicNativePlugin);\n\nvar AppRate = new AppRateOriginal();\nexport { AppRate };","map":{"version":3,"sources":["../../../../src/@ionic-native/plugins/app-rate/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAO,iBAAP,EAAO,OAAP,EAAO,kBAAP,EAAO,kBAAP,QAAoE,oBAApE;;;;;AA6L6B,EAAA,SAAA,CAAA,eAAA,EAAiB,MAAjB,CAAA;;;;;;AAa3B,EAAA,eAAA,CAAA,SAAA,CAAA,eAAA,GAAe,UAAC,WAAD,EAAqB;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAApC;;AAMA,EAAA,eAAA,CAAA,SAAA,CAAA,kBAAA,GAAkB,YAAA;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAAlB;;wBAbA,eAAA,CAAA,S,EAAA,a,EAAW;;;KAAA;;;KAAA;oBAAA;;AAAA,G;;;;;;SApMb,e;EA8L6B,iB;;IAAhB,OAAA,GAAA,IAAO,eAAP,E","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface AppRatePreferences {\n  /**\n   * Custom BCP 47 language tag\n   */\n  useLanguage?: string;\n\n  /**\n   * Custom application title\n   */\n  displayAppName?: string;\n\n  /**\n   * Show dialog again when application version will be updated. Defaults to `true`\n   */\n  promptAgainForEachNewVersion?: boolean;\n\n  /**\n   * count of runs of application before dialog will be displayed. Defaults to `3`\n   */\n  usesUntilPrompt?: number;\n\n  /**\n   * Simple Mode to display the rate dialog directly and bypass negative feedback filtering flow\n   */\n  simpleMode?: boolean;\n\n  /**\n   * leave app or no when application page opened in app store (now supported only for iOS). Defaults to `false`\n   */\n  inAppReview?: boolean;\n\n  /**\n   * use custom view for rate dialog. Defaults to `false`\n   */\n  useCustomRateDialog?: boolean;\n\n  /**\n   * Custom locale object\n   */\n  customLocale?: AppRateCustomLocale;\n\n  /**\n   * Callbacks for events\n   */\n  callbacks?: AppRateCallbacks;\n\n  /**\n   * App Store URLS\n   */\n  storeAppURL?: AppUrls;\n\n  /**\n   * Open URL function\n   */\n  openUrl?: (url: string) => void;\n}\n\nexport interface AppRateCustomLocale {\n  /** Title */\n  title?: string;\n\n  /** Message */\n  message?: string;\n\n  /** Cancel button label */\n  cancelButtonLabel?: string;\n\n  /** Later button label */\n  laterButtonLabel?: string;\n\n  /** Rate button label */\n  rateButtonLabel?: string;\n\n  /** Yes button label */\n  yesButtonLabel?: string;\n\n  /** No button label */\n  noButtonLabel?: string;\n\n  /** App rate prompt title */\n  appRatePromptTitle?: string;\n\n  /** Feedback prompt title */\n  feedbackPromptTitle?: string;\n\n  /** Feedback prompt message */\n  appRatePromptMessage?: string;\n\n  /** Feedback prompt message */\n  feedbackPromptMessage?: string;\n}\n\nexport interface AppRateCallbacks {\n  /**\n   * call back function. called when user clicked on rate-dialog buttons\n   */\n  onButtonClicked?: Function;\n\n  /**\n   * call back function. called when rate-dialog showing\n   */\n  onRateDialogShow?: Function;\n  /**\n   * call back function. called when user clicked on negative feedback\n   */\n  handleNegativeFeedback?: Function;\n}\n\nexport interface AppUrls {\n  /**\n   * application id in AppStore\n   */\n  ios?: string;\n\n  /**\n   * application URL in GooglePlay\n   */\n  android?: string;\n\n  /**\n   * application URL in Windows Store\n   */\n  windows?: string;\n\n  /**\n   * application URL in AppWorld\n   */\n  blackberry?: string;\n\n  /**\n   * application URL in WindowsStore\n   */\n  windows8?: string;\n}\n\n/**\n * @name App Rate\n * @premier app-rate\n * @description\n * The AppRate plugin makes it easy to prompt the user to rate your app, either now, later, or never.\n *\n * Requires Cordova plugin: cordova-plugin-apprate. For more info, please see the [AppRate plugin docs](https://github.com/pushandplay/cordova-plugin-apprate).\n *\n * @usage\n * ```typescript\n * import { AppRate } from '@ionic-native/app-rate/ngx';\n *\n * constructor(private appRate: AppRate) { }\n *\n * ...\n * // set certain preferences\n * this.appRate.preferences.storeAppURL = {\n *   ios: '<app_id>',\n *   android: 'market://details?id=<package_name>',\n *   windows: 'ms-windows-store://review/?ProductId=<store_id>'\n * }\n *\n * this.appRate.promptForRating(true);\n *\n * // or, override the whole preferences object\n * this.appRate.preferences = {\n *   usesUntilPrompt: 3,\n *   storeAppURL: {\n *    ios: '<app_id>',\n *    android: 'market://details?id=<package_name>',\n *    windows: 'ms-windows-store://review/?ProductId=<store_id>'\n *   }\n * }\n *\n * this.appRate.promptForRating(false);\n * ```\n *\n * @interfaces\n * AppRatePreferences\n * AppUrls\n * AppRateCallbacks\n * AppRateCustomLocal\n *\n */\n@Plugin({\n  pluginName: 'AppRate',\n  plugin: 'cordova-plugin-apprate',\n  pluginRef: 'AppRate',\n  repo: 'https://github.com/pushandplay/cordova-plugin-apprate',\n  platforms: ['Android', 'BlackBerry 10', 'iOS', 'Windows'],\n})\n@Injectable()\nexport class AppRate extends IonicNativePlugin {\n  /**\n   * Configure various settings for the Rating View.\n   * See table below for options\n   */\n  @CordovaProperty()\n  preferences: AppRatePreferences;\n\n  /**\n   * Prompts the user for rating\n   * @param {boolean} immediately  Show the rating prompt immediately.\n   */\n  @Cordova()\n  promptForRating(immediately: boolean): void {}\n\n  /**\n   * Immediately send the user to the app store rating page\n   */\n  @Cordova()\n  navigateToAppStore(): void {}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}