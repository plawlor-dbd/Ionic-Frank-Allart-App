{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar Point = require(\"./Point\");\n\nvar Size = require(\"./Size\");\n\nvar truncRound = function (num) {\n  return Math.trunc(num * 10000) / 10000;\n};\n\nvar GUESTURE_TYPE;\n\n(function (GUESTURE_TYPE) {\n  GUESTURE_TYPE[\"UNSET\"] = \"GUESTURE_TYPE_UNSET\";\n  GUESTURE_TYPE[\"PAN\"] = \"GUESTURE_TYPE_PAN\";\n  GUESTURE_TYPE[\"PINCH\"] = \"GUESTURE_TYPE_PINCH\";\n})(GUESTURE_TYPE || (GUESTURE_TYPE = {}));\n\nvar PinchToZoom = function (_super) {\n  __extends(PinchToZoom, _super);\n\n  function PinchToZoom(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.transform = {\n      zoomFactor: 1.0,\n      translate: Point.newOriginPoint()\n    };\n    _this.currentGesture = GUESTURE_TYPE.UNSET;\n    _this.pinchStartZoomFactor = 1.0;\n    _this.pinchStartTouchMidpoint = Point.newOriginPoint();\n    _this.pinchStartTranslate = Point.newOriginPoint();\n    _this.pinchStartTouchPointDist = 0;\n    _this.panStartPoint = Point.newOriginPoint();\n    _this.panStartTranslate = Point.newOriginPoint();\n    _this.state = {\n      lastSingleTouchPoint: Point.newOriginPoint()\n    };\n    return _this;\n  }\n\n  PinchToZoom.getTouchesCoordinate = function (syntheticEvent) {\n    var parentNode = syntheticEvent.currentTarget.parentNode,\n        nativeEvent = syntheticEvent.nativeEvent;\n\n    if (!(parentNode instanceof HTMLElement) || !(nativeEvent instanceof TouchEvent)) {\n      return [];\n    }\n\n    var containerRect = parentNode.getBoundingClientRect();\n    var rect = {\n      origin: {\n        x: containerRect.left,\n        y: containerRect.top\n      },\n      size: {\n        width: containerRect.width,\n        height: containerRect.height\n      }\n    };\n    var touchList = nativeEvent.touches;\n    var coordinates = [];\n\n    for (var i = 0; i < touchList.length; i += 1) {\n      var touch = touchList.item(i);\n\n      if (touch) {\n        var touchPoint = {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n        var p = Point.normalizePointInRect(touchPoint, rect);\n        coordinates.push(p);\n      }\n    }\n\n    return coordinates;\n  };\n\n  PinchToZoom.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.minZoomScale !== this.props.minZoomScale || prevProps.boundSize.height !== this.props.boundSize.height) {\n      this.zoomContentArea(this.props.minZoomScale);\n      this.guardZoomAreaTranslate();\n    }\n  };\n\n  PinchToZoom.prototype.componentDidMount = function () {\n    var _this = this;\n\n    setTimeout(function () {\n      var startEvent = new TouchEvent('touchstart', {\n        cancelable: true,\n        bubbles: true\n      });\n      var endEvent = new TouchEvent('touchend', {\n        cancelable: true,\n        bubbles: true\n      });\n\n      if (_this.zoomAreaContainer) {\n        _this.zoomAreaContainer.dispatchEvent(startEvent);\n\n        _this.zoomAreaContainer.dispatchEvent(endEvent);\n      }\n    }, 0);\n  };\n\n  PinchToZoom.prototype.onPinchStart = function (syntheticEvent) {\n    var _a = PinchToZoom.getTouchesCoordinate(syntheticEvent),\n        p1 = _a[0],\n        p2 = _a[1];\n\n    this.pinchStartTouchMidpoint = Point.midpoint(p1, p2);\n    this.pinchStartTouchPointDist = Point.distance(p1, p2);\n\n    var _b = this.getTransform(),\n        currentZoomFactor = _b.currentZoomFactor,\n        currentTranslate = _b.currentTranslate;\n\n    this.pinchStartZoomFactor = currentZoomFactor;\n    this.pinchStartTranslate = currentTranslate;\n  };\n\n  PinchToZoom.prototype.onPinchMove = function (syntheticEvent) {\n    var _a = PinchToZoom.getTouchesCoordinate(syntheticEvent),\n        p1 = _a[0],\n        p2 = _a[1];\n\n    var pinchCurrentTouchPointDist = Point.distance(p1, p2);\n    var deltaTouchPointDist = pinchCurrentTouchPointDist - this.pinchStartTouchPointDist;\n    var newZoomFactor = this.pinchStartZoomFactor + deltaTouchPointDist * 0.01;\n    this.zoomContentArea(newZoomFactor);\n  };\n\n  PinchToZoom.prototype.onPinchEnd = function () {\n    this.guardZoomAreaScale();\n    this.guardZoomAreaTranslate();\n  };\n\n  PinchToZoom.prototype.onPanStart = function (syntheticEvent) {\n    var p1 = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n    var currentTranslate = this.getTransform().currentTranslate;\n    this.panStartPoint = p1;\n    this.panStartTranslate = currentTranslate;\n  };\n\n  PinchToZoom.prototype.onPanMove = function (syntheticEvent) {\n    var dragPoint = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n    var currentZoomFactor = this.getTransform().currentZoomFactor;\n    var origin = this.panStartPoint;\n    var prevTranslate = this.panStartTranslate;\n    var dragOffset = Point.offset(dragPoint, origin);\n    var adjustedZoomOffset = Point.scale(dragOffset, 1 / currentZoomFactor);\n    var nextTranslate = Point.sum(adjustedZoomOffset, prevTranslate);\n    this.panContentArea(nextTranslate);\n  };\n\n  PinchToZoom.prototype.onPanEnd = function () {\n    this.guardZoomAreaTranslate();\n  };\n\n  PinchToZoom.prototype.guardZoomAreaScale = function () {\n    var currentZoomFactor = this.getTransform().currentZoomFactor;\n    var _a = this.props,\n        minZoomScale = _a.minZoomScale,\n        maxZoomScale = _a.maxZoomScale;\n\n    if (currentZoomFactor > maxZoomScale) {\n      this.zoomContentArea(maxZoomScale);\n    } else if (currentZoomFactor < minZoomScale) {\n      this.zoomContentArea(minZoomScale);\n    }\n  };\n\n  PinchToZoom.prototype.guardZoomAreaTranslate = function () {\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    var _a = this.getTransform(),\n        currentZoomFactor = _a.currentZoomFactor,\n        currentTranslate = _a.currentTranslate;\n\n    var minZoomScale = this.props.minZoomScale;\n    var _b = this.zoomAreaContainer,\n        containerW = _b.clientWidth,\n        containerH = _b.clientHeight;\n    var _c = this.zoomArea,\n        contentW = _c.clientWidth,\n        contentH = _c.clientHeight;\n\n    if (currentZoomFactor < minZoomScale) {\n      return;\n    }\n\n    var boundSize = {\n      width: containerW,\n      height: containerH\n    };\n    var contentSize = Size.scale({\n      width: contentW,\n      height: contentH\n    }, currentZoomFactor);\n    var diff = Size.diff(boundSize, contentSize);\n    var diffInPoint = Size.toPoint(diff);\n    var unitScaleLeftTopPoint = Point.scale(diffInPoint, 1 / (2 * currentZoomFactor));\n    var maxLeftTopPoint = Point.boundWithin(Point.newOriginPoint(), unitScaleLeftTopPoint, Point.map(unitScaleLeftTopPoint, truncRound));\n    var unitScaleRightBottomPoint = Point.scale(diffInPoint, 1 / currentZoomFactor);\n    var maxRightBottomPoint = {\n      x: Math.min(unitScaleRightBottomPoint.x, maxLeftTopPoint.x),\n      y: Math.min(unitScaleRightBottomPoint.y, maxLeftTopPoint.y)\n    };\n    var validatePos = Point.boundWithin(maxRightBottomPoint, currentTranslate, maxLeftTopPoint);\n\n    if (!Point.isEqual(validatePos, currentTranslate)) {\n      this.panContentArea(validatePos);\n    }\n  };\n\n  PinchToZoom.prototype.panContentArea = function (pos) {\n    this.setTransform({\n      translate: pos\n    });\n  };\n\n  PinchToZoom.prototype.zoomContentArea = function (zoomFactor) {\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    var prevZoomFactor = this.pinchStartZoomFactor;\n    var prevTranslate = this.pinchStartTranslate;\n    var _a = this.zoomAreaContainer,\n        containerW = _a.clientWidth,\n        containerH = _a.clientHeight;\n    var boundSize = {\n      width: containerW,\n      height: containerH\n    };\n    var prevZoomSize = Size.scale(boundSize, prevZoomFactor);\n    var nextZoomSize = Size.scale(boundSize, zoomFactor);\n    var prevRectCenterPoint = {\n      x: prevZoomSize.width / 2,\n      y: prevZoomSize.height / 2\n    };\n    var nextRectCenterPoint = {\n      x: nextZoomSize.width / 2,\n      y: nextZoomSize.height / 2\n    };\n    var deltaTranslate = Point.scale(Point.offset(prevRectCenterPoint, nextRectCenterPoint), 1 / (zoomFactor * prevZoomFactor));\n    var accumulateTranslate = Point.sum(deltaTranslate, prevTranslate);\n    this.setTransform({\n      zoomFactor: truncRound(zoomFactor),\n      translate: accumulateTranslate\n    });\n  };\n\n  PinchToZoom.prototype.handleTouchStart = function (syntheticEvent) {\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    var nativeEvent = syntheticEvent.nativeEvent;\n\n    if (!(nativeEvent instanceof TouchEvent)) {\n      return;\n    }\n\n    this.zoomArea.style.transitionDuration = '0.0s';\n\n    switch (nativeEvent.touches.length) {\n      case 2:\n        this.currentGesture = GUESTURE_TYPE.PINCH;\n        this.onPinchStart(syntheticEvent);\n        break;\n\n      default:\n        {\n          var p1 = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n          this.setState({\n            lastSingleTouchPoint: p1\n          });\n          this.currentGesture = GUESTURE_TYPE.PAN;\n          this.onPanStart(syntheticEvent);\n        }\n    }\n  };\n\n  PinchToZoom.prototype.handleTouchMove = function (syntheticEvent) {\n    var nativeEvent = syntheticEvent.nativeEvent;\n\n    if (!(nativeEvent instanceof TouchEvent)) {\n      return;\n    }\n\n    switch (nativeEvent.touches.length) {\n      case 2:\n        if (this.currentGesture === GUESTURE_TYPE.PINCH) {\n          this.onPinchMove(syntheticEvent);\n        }\n\n        break;\n\n      default:\n        if (this.currentGesture === GUESTURE_TYPE.PAN) {\n          this.onPanMove(syntheticEvent);\n        }\n\n    }\n  };\n\n  PinchToZoom.prototype.handleTouchEnd = function (syntheticEvent) {\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    this.zoomArea.style.transitionDuration = '0.3s';\n\n    if (this.currentGesture === GUESTURE_TYPE.PINCH) {\n      this.onPinchEnd();\n    }\n\n    if (this.currentGesture === GUESTURE_TYPE.PAN) {\n      this.onPanEnd();\n    }\n\n    this.currentGesture = GUESTURE_TYPE.UNSET;\n  };\n\n  PinchToZoom.prototype.autoZoomToLastTouchPoint = function () {\n    var lastSingleTouchPoint = this.state.lastSingleTouchPoint;\n\n    if (lastSingleTouchPoint.x === 0 && lastSingleTouchPoint.y === 0) {\n      return;\n    }\n\n    this.autoZoomToPosition(lastSingleTouchPoint);\n  };\n\n  PinchToZoom.prototype.autoZoomToPosition = function (pos) {\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    var autoZoomFactor = 2.0;\n\n    var _a = this.getTransform(),\n        currentZoomFactor = _a.currentZoomFactor,\n        currentTranslate = _a.currentTranslate;\n\n    var zoomAreaContainerW = this.zoomAreaContainer.clientWidth;\n    var zoomAreaContainerH = this.zoomAreaContainer.clientHeight;\n    var zoomAreaX = (pos.x / currentZoomFactor - currentTranslate.x) * autoZoomFactor;\n    var zoomAreaY = (pos.y / currentZoomFactor - currentTranslate.y) * autoZoomFactor;\n    var deltaX = zoomAreaContainerW / 2 - zoomAreaX;\n    var deltaY = zoomAreaContainerH / 2 - zoomAreaY;\n    var inScaleTranslate = {\n      x: deltaX / autoZoomFactor,\n      y: deltaY / autoZoomFactor\n    };\n    this.zoomArea.style.transitionDuration = '0.3s';\n    this.setTransform({\n      zoomFactor: autoZoomFactor,\n      translate: {\n        x: inScaleTranslate.x,\n        y: inScaleTranslate.y\n      }\n    });\n    this.guardZoomAreaTranslate();\n  };\n\n  PinchToZoom.prototype.setTransform = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.zoomFactor,\n        zoomFactor = _c === void 0 ? this.transform.zoomFactor : _c,\n        _d = _b.translate,\n        translate = _d === void 0 ? {\n      x: this.transform.translate.x,\n      y: this.transform.translate.y\n    } : _d;\n\n    var _e = this.props,\n        onTransform = _e.onTransform,\n        minZoomScale = _e.minZoomScale;\n\n    if (!this.zoomAreaContainer || !this.zoomArea) {\n      return;\n    }\n\n    var roundTransalteX = Math.round(translate.x * 1000) / 1000;\n    var roundTransalteY = Math.round(translate.y * 1000) / 1000;\n\n    if (zoomFactor < minZoomScale * 0.8) {\n      return;\n    }\n\n    this.transform.zoomFactor = zoomFactor;\n    this.transform.translate.x = roundTransalteX;\n    this.transform.translate.y = roundTransalteY;\n\n    if (onTransform) {\n      onTransform(this.transform);\n    }\n\n    var styleString = \"\\n        scale(\" + zoomFactor + \")\\n        translate(\" + roundTransalteX + \"px, \" + roundTransalteY + \"px)\\n        translateZ(\" + 0 + \")\\n      \";\n    this.zoomArea.style.transform = styleString;\n    this.zoomArea.style.webkitTransform = styleString;\n  };\n\n  PinchToZoom.prototype.getTransform = function () {\n    var _a = this.transform,\n        zoomFactor = _a.zoomFactor,\n        translate = _a.translate;\n    return {\n      currentZoomFactor: zoomFactor,\n      currentTranslate: {\n        x: translate.x,\n        y: translate.y\n      }\n    };\n  };\n\n  PinchToZoom.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        debug = _a.debug,\n        fillContainer = _a.fillContainer,\n        className = _a.className,\n        children = _a.children;\n    var classNameList = ['', 'pinch-to-zoom-container'];\n    var containerInlineStyle = {\n      display: 'inline-block',\n      overflow: 'hidden',\n      backgroundColor: 'inherit',\n      width: fillContainer ? '100%' : undefined,\n      height: fillContainer ? '100%' : undefined\n    };\n    var zoomAreaInlineStyle = {\n      display: 'inline-block',\n      willChange: 'transform',\n      transformOrigin: '0px 0px 0px',\n      transition: 'transform 0ms ease',\n      transitionTimingFunction: 'cubic-bezier(0.1, 0.57, 0.1, 1)',\n      transitionDuration: '0ms',\n      perspective: 1000,\n      width: '100%'\n    };\n\n    if (debug) {\n      classNameList.push('debug');\n      containerInlineStyle.backgroundColor = 'red';\n    }\n\n    return React.createElement(\"div\", {\n      className: className.concat(classNameList.join(' ')),\n      style: containerInlineStyle,\n      onTouchStart: function (e) {\n        return _this.handleTouchStart(e);\n      },\n      onTouchMove: function (e) {\n        return _this.handleTouchMove(e);\n      },\n      onTouchEnd: function (e) {\n        return _this.handleTouchEnd(e);\n      },\n      ref: function (c) {\n        _this.zoomAreaContainer = c || undefined;\n      }\n    }, React.createElement(\"div\", {\n      className: \"pinch-to-zoom-area\",\n      style: zoomAreaInlineStyle,\n      ref: function (c) {\n        _this.zoomArea = c || undefined;\n      }\n    }, children));\n  };\n\n  return PinchToZoom;\n}(React.Component);\n\nPinchToZoom.defaultProps = {\n  debug: false,\n  className: '',\n  minZoomScale: 1.0,\n  maxZoomScale: 4.0,\n  boundSize: {\n    width: 100,\n    height: 100\n  },\n  contentSize: {\n    width: 100,\n    height: 100\n  },\n  fillContainer: false\n};\nPinchToZoom.propTypes = {\n  debug: PropTypes.bool,\n  className: PropTypes.string,\n  minZoomScale: PropTypes.number,\n  maxZoomScale: PropTypes.number,\n  boundSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  contentSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  fillContainer: PropTypes.bool,\n  children: PropTypes.node\n};\nexports.default = PinchToZoom;","map":{"version":3,"sources":["../src/PinchToZoom/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar Point = require(\"./Point\");\nvar Size = require(\"./Size\");\nvar truncRound = function (num) { return Math.trunc(num * 10000) / 10000; };\nvar GUESTURE_TYPE;\n(function (GUESTURE_TYPE) {\n    GUESTURE_TYPE[\"UNSET\"] = \"GUESTURE_TYPE_UNSET\";\n    GUESTURE_TYPE[\"PAN\"] = \"GUESTURE_TYPE_PAN\";\n    GUESTURE_TYPE[\"PINCH\"] = \"GUESTURE_TYPE_PINCH\";\n})(GUESTURE_TYPE || (GUESTURE_TYPE = {}));\nvar PinchToZoom = (function (_super) {\n    __extends(PinchToZoom, _super);\n    function PinchToZoom(props) {\n        var _this = _super.call(this, props) || this;\n        _this.transform = {\n            zoomFactor: 1.0,\n            translate: Point.newOriginPoint(),\n        };\n        _this.currentGesture = GUESTURE_TYPE.UNSET;\n        _this.pinchStartZoomFactor = 1.0;\n        _this.pinchStartTouchMidpoint = Point.newOriginPoint();\n        _this.pinchStartTranslate = Point.newOriginPoint();\n        _this.pinchStartTouchPointDist = 0;\n        _this.panStartPoint = Point.newOriginPoint();\n        _this.panStartTranslate = Point.newOriginPoint();\n        _this.state = {\n            lastSingleTouchPoint: Point.newOriginPoint(),\n        };\n        return _this;\n    }\n    PinchToZoom.getTouchesCoordinate = function (syntheticEvent) {\n        var parentNode = syntheticEvent.currentTarget.parentNode, nativeEvent = syntheticEvent.nativeEvent;\n        if (!(parentNode instanceof HTMLElement) ||\n            !(nativeEvent instanceof TouchEvent)) {\n            return [];\n        }\n        var containerRect = parentNode.getBoundingClientRect();\n        var rect = {\n            origin: { x: containerRect.left, y: containerRect.top },\n            size: {\n                width: containerRect.width,\n                height: containerRect.height,\n            },\n        };\n        var touchList = nativeEvent.touches;\n        var coordinates = [];\n        for (var i = 0; i < touchList.length; i += 1) {\n            var touch = touchList.item(i);\n            if (touch) {\n                var touchPoint = {\n                    x: touch.clientX,\n                    y: touch.clientY,\n                };\n                var p = Point.normalizePointInRect(touchPoint, rect);\n                coordinates.push(p);\n            }\n        }\n        return coordinates;\n    };\n    PinchToZoom.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.minZoomScale !== this.props.minZoomScale ||\n            prevProps.boundSize.height !== this.props.boundSize.height) {\n            this.zoomContentArea(this.props.minZoomScale);\n            this.guardZoomAreaTranslate();\n        }\n    };\n    PinchToZoom.prototype.componentDidMount = function () {\n        var _this = this;\n        setTimeout(function () {\n            var startEvent = new TouchEvent('touchstart', {\n                cancelable: true,\n                bubbles: true,\n            });\n            var endEvent = new TouchEvent('touchend', {\n                cancelable: true,\n                bubbles: true,\n            });\n            if (_this.zoomAreaContainer) {\n                _this.zoomAreaContainer.dispatchEvent(startEvent);\n                _this.zoomAreaContainer.dispatchEvent(endEvent);\n            }\n        }, 0);\n    };\n    PinchToZoom.prototype.onPinchStart = function (syntheticEvent) {\n        var _a = PinchToZoom.getTouchesCoordinate(syntheticEvent), p1 = _a[0], p2 = _a[1];\n        this.pinchStartTouchMidpoint = Point.midpoint(p1, p2);\n        this.pinchStartTouchPointDist = Point.distance(p1, p2);\n        var _b = this.getTransform(), currentZoomFactor = _b.currentZoomFactor, currentTranslate = _b.currentTranslate;\n        this.pinchStartZoomFactor = currentZoomFactor;\n        this.pinchStartTranslate = currentTranslate;\n    };\n    PinchToZoom.prototype.onPinchMove = function (syntheticEvent) {\n        var _a = PinchToZoom.getTouchesCoordinate(syntheticEvent), p1 = _a[0], p2 = _a[1];\n        var pinchCurrentTouchPointDist = Point.distance(p1, p2);\n        var deltaTouchPointDist = pinchCurrentTouchPointDist - this.pinchStartTouchPointDist;\n        var newZoomFactor = this.pinchStartZoomFactor + deltaTouchPointDist * 0.01;\n        this.zoomContentArea(newZoomFactor);\n    };\n    PinchToZoom.prototype.onPinchEnd = function () {\n        this.guardZoomAreaScale();\n        this.guardZoomAreaTranslate();\n    };\n    PinchToZoom.prototype.onPanStart = function (syntheticEvent) {\n        var p1 = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n        var currentTranslate = this.getTransform().currentTranslate;\n        this.panStartPoint = p1;\n        this.panStartTranslate = currentTranslate;\n    };\n    PinchToZoom.prototype.onPanMove = function (syntheticEvent) {\n        var dragPoint = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n        var currentZoomFactor = this.getTransform().currentZoomFactor;\n        var origin = this.panStartPoint;\n        var prevTranslate = this.panStartTranslate;\n        var dragOffset = Point.offset(dragPoint, origin);\n        var adjustedZoomOffset = Point.scale(dragOffset, 1 / currentZoomFactor);\n        var nextTranslate = Point.sum(adjustedZoomOffset, prevTranslate);\n        this.panContentArea(nextTranslate);\n    };\n    PinchToZoom.prototype.onPanEnd = function () {\n        this.guardZoomAreaTranslate();\n    };\n    PinchToZoom.prototype.guardZoomAreaScale = function () {\n        var currentZoomFactor = this.getTransform().currentZoomFactor;\n        var _a = this.props, minZoomScale = _a.minZoomScale, maxZoomScale = _a.maxZoomScale;\n        if (currentZoomFactor > maxZoomScale) {\n            this.zoomContentArea(maxZoomScale);\n        }\n        else if (currentZoomFactor < minZoomScale) {\n            this.zoomContentArea(minZoomScale);\n        }\n    };\n    PinchToZoom.prototype.guardZoomAreaTranslate = function () {\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        var _a = this.getTransform(), currentZoomFactor = _a.currentZoomFactor, currentTranslate = _a.currentTranslate;\n        var minZoomScale = this.props.minZoomScale;\n        var _b = this.zoomAreaContainer, containerW = _b.clientWidth, containerH = _b.clientHeight;\n        var _c = this.zoomArea, contentW = _c.clientWidth, contentH = _c.clientHeight;\n        if (currentZoomFactor < minZoomScale) {\n            return;\n        }\n        var boundSize = {\n            width: containerW,\n            height: containerH,\n        };\n        var contentSize = Size.scale({\n            width: contentW,\n            height: contentH,\n        }, currentZoomFactor);\n        var diff = Size.diff(boundSize, contentSize);\n        var diffInPoint = Size.toPoint(diff);\n        var unitScaleLeftTopPoint = Point.scale(diffInPoint, 1 / (2 * currentZoomFactor));\n        var maxLeftTopPoint = Point.boundWithin(Point.newOriginPoint(), unitScaleLeftTopPoint, Point.map(unitScaleLeftTopPoint, truncRound));\n        var unitScaleRightBottomPoint = Point.scale(diffInPoint, 1 / currentZoomFactor);\n        var maxRightBottomPoint = {\n            x: Math.min(unitScaleRightBottomPoint.x, maxLeftTopPoint.x),\n            y: Math.min(unitScaleRightBottomPoint.y, maxLeftTopPoint.y),\n        };\n        var validatePos = Point.boundWithin(maxRightBottomPoint, currentTranslate, maxLeftTopPoint);\n        if (!Point.isEqual(validatePos, currentTranslate)) {\n            this.panContentArea(validatePos);\n        }\n    };\n    PinchToZoom.prototype.panContentArea = function (pos) {\n        this.setTransform({\n            translate: pos,\n        });\n    };\n    PinchToZoom.prototype.zoomContentArea = function (zoomFactor) {\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        var prevZoomFactor = this.pinchStartZoomFactor;\n        var prevTranslate = this.pinchStartTranslate;\n        var _a = this.zoomAreaContainer, containerW = _a.clientWidth, containerH = _a.clientHeight;\n        var boundSize = {\n            width: containerW,\n            height: containerH,\n        };\n        var prevZoomSize = Size.scale(boundSize, prevZoomFactor);\n        var nextZoomSize = Size.scale(boundSize, zoomFactor);\n        var prevRectCenterPoint = {\n            x: prevZoomSize.width / 2,\n            y: prevZoomSize.height / 2,\n        };\n        var nextRectCenterPoint = {\n            x: nextZoomSize.width / 2,\n            y: nextZoomSize.height / 2,\n        };\n        var deltaTranslate = Point.scale(Point.offset(prevRectCenterPoint, nextRectCenterPoint), 1 / (zoomFactor * prevZoomFactor));\n        var accumulateTranslate = Point.sum(deltaTranslate, prevTranslate);\n        this.setTransform({\n            zoomFactor: truncRound(zoomFactor),\n            translate: accumulateTranslate,\n        });\n    };\n    PinchToZoom.prototype.handleTouchStart = function (syntheticEvent) {\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        var nativeEvent = syntheticEvent.nativeEvent;\n        if (!(nativeEvent instanceof TouchEvent)) {\n            return;\n        }\n        this.zoomArea.style.transitionDuration = '0.0s';\n        switch (nativeEvent.touches.length) {\n            case 2:\n                this.currentGesture = GUESTURE_TYPE.PINCH;\n                this.onPinchStart(syntheticEvent);\n                break;\n            default: {\n                var p1 = PinchToZoom.getTouchesCoordinate(syntheticEvent)[0];\n                this.setState({ lastSingleTouchPoint: p1 });\n                this.currentGesture = GUESTURE_TYPE.PAN;\n                this.onPanStart(syntheticEvent);\n            }\n        }\n    };\n    PinchToZoom.prototype.handleTouchMove = function (syntheticEvent) {\n        var nativeEvent = syntheticEvent.nativeEvent;\n        if (!(nativeEvent instanceof TouchEvent)) {\n            return;\n        }\n        switch (nativeEvent.touches.length) {\n            case 2:\n                if (this.currentGesture === GUESTURE_TYPE.PINCH) {\n                    this.onPinchMove(syntheticEvent);\n                }\n                break;\n            default:\n                if (this.currentGesture === GUESTURE_TYPE.PAN) {\n                    this.onPanMove(syntheticEvent);\n                }\n        }\n    };\n    PinchToZoom.prototype.handleTouchEnd = function (syntheticEvent) {\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        this.zoomArea.style.transitionDuration = '0.3s';\n        if (this.currentGesture === GUESTURE_TYPE.PINCH) {\n            this.onPinchEnd();\n        }\n        if (this.currentGesture === GUESTURE_TYPE.PAN) {\n            this.onPanEnd();\n        }\n        this.currentGesture = GUESTURE_TYPE.UNSET;\n    };\n    PinchToZoom.prototype.autoZoomToLastTouchPoint = function () {\n        var lastSingleTouchPoint = this.state.lastSingleTouchPoint;\n        if (lastSingleTouchPoint.x === 0 && lastSingleTouchPoint.y === 0) {\n            return;\n        }\n        this.autoZoomToPosition(lastSingleTouchPoint);\n    };\n    PinchToZoom.prototype.autoZoomToPosition = function (pos) {\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        var autoZoomFactor = 2.0;\n        var _a = this.getTransform(), currentZoomFactor = _a.currentZoomFactor, currentTranslate = _a.currentTranslate;\n        var zoomAreaContainerW = this.zoomAreaContainer.clientWidth;\n        var zoomAreaContainerH = this.zoomAreaContainer.clientHeight;\n        var zoomAreaX = (pos.x / currentZoomFactor - currentTranslate.x) * autoZoomFactor;\n        var zoomAreaY = (pos.y / currentZoomFactor - currentTranslate.y) * autoZoomFactor;\n        var deltaX = zoomAreaContainerW / 2 - zoomAreaX;\n        var deltaY = zoomAreaContainerH / 2 - zoomAreaY;\n        var inScaleTranslate = {\n            x: deltaX / autoZoomFactor,\n            y: deltaY / autoZoomFactor,\n        };\n        this.zoomArea.style.transitionDuration = '0.3s';\n        this.setTransform({\n            zoomFactor: autoZoomFactor,\n            translate: {\n                x: inScaleTranslate.x,\n                y: inScaleTranslate.y,\n            },\n        });\n        this.guardZoomAreaTranslate();\n    };\n    PinchToZoom.prototype.setTransform = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.zoomFactor, zoomFactor = _c === void 0 ? this.transform.zoomFactor : _c, _d = _b.translate, translate = _d === void 0 ? {\n            x: this.transform.translate.x,\n            y: this.transform.translate.y,\n        } : _d;\n        var _e = this.props, onTransform = _e.onTransform, minZoomScale = _e.minZoomScale;\n        if (!this.zoomAreaContainer || !this.zoomArea) {\n            return;\n        }\n        var roundTransalteX = Math.round(translate.x * 1000) / 1000;\n        var roundTransalteY = Math.round(translate.y * 1000) / 1000;\n        if (zoomFactor < minZoomScale * 0.8) {\n            return;\n        }\n        this.transform.zoomFactor = zoomFactor;\n        this.transform.translate.x = roundTransalteX;\n        this.transform.translate.y = roundTransalteY;\n        if (onTransform) {\n            onTransform(this.transform);\n        }\n        var styleString = \"\\n        scale(\" + zoomFactor + \")\\n        translate(\" + roundTransalteX + \"px, \" + roundTransalteY + \"px)\\n        translateZ(\" + 0 + \")\\n      \";\n        this.zoomArea.style.transform = styleString;\n        this.zoomArea.style.webkitTransform = styleString;\n    };\n    PinchToZoom.prototype.getTransform = function () {\n        var _a = this.transform, zoomFactor = _a.zoomFactor, translate = _a.translate;\n        return {\n            currentZoomFactor: zoomFactor,\n            currentTranslate: {\n                x: translate.x,\n                y: translate.y,\n            },\n        };\n    };\n    PinchToZoom.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, debug = _a.debug, fillContainer = _a.fillContainer, className = _a.className, children = _a.children;\n        var classNameList = ['', 'pinch-to-zoom-container'];\n        var containerInlineStyle = {\n            display: 'inline-block',\n            overflow: 'hidden',\n            backgroundColor: 'inherit',\n            width: fillContainer ? '100%' : undefined,\n            height: fillContainer ? '100%' : undefined,\n        };\n        var zoomAreaInlineStyle = {\n            display: 'inline-block',\n            willChange: 'transform',\n            transformOrigin: '0px 0px 0px',\n            transition: 'transform 0ms ease',\n            transitionTimingFunction: 'cubic-bezier(0.1, 0.57, 0.1, 1)',\n            transitionDuration: '0ms',\n            perspective: 1000,\n            width: '100%',\n        };\n        if (debug) {\n            classNameList.push('debug');\n            containerInlineStyle.backgroundColor = 'red';\n        }\n        return (React.createElement(\"div\", { className: className.concat(classNameList.join(' ')), style: containerInlineStyle, onTouchStart: function (e) { return _this.handleTouchStart(e); }, onTouchMove: function (e) { return _this.handleTouchMove(e); }, onTouchEnd: function (e) { return _this.handleTouchEnd(e); }, ref: function (c) {\n                _this.zoomAreaContainer = c || undefined;\n            } },\n            React.createElement(\"div\", { className: \"pinch-to-zoom-area\", style: zoomAreaInlineStyle, ref: function (c) {\n                    _this.zoomArea = c || undefined;\n                } }, children)));\n    };\n    return PinchToZoom;\n}(React.Component));\nPinchToZoom.defaultProps = {\n    debug: false,\n    className: '',\n    minZoomScale: 1.0,\n    maxZoomScale: 4.0,\n    boundSize: {\n        width: 100,\n        height: 100,\n    },\n    contentSize: {\n        width: 100,\n        height: 100,\n    },\n    fillContainer: false,\n};\nPinchToZoom.propTypes = {\n    debug: PropTypes.bool,\n    className: PropTypes.string,\n    minZoomScale: PropTypes.number,\n    maxZoomScale: PropTypes.number,\n    boundSize: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }),\n    contentSize: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }),\n    fillContainer: PropTypes.bool,\n    children: PropTypes.node,\n};\nexports.default = PinchToZoom;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}