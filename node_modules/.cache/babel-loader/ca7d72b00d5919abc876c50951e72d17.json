{"ast":null,"code":"var _jsxFileName = \"/Users/Peter/Documents/GitHub/Ionic-Frank-Allart-App/src/pages/AlphabeticalIndex.tsx\";\nimport { IonPage, IonContent, useIonViewWillEnter, IonList, IonLabel, IonCol, IonRow } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport '../styles/AlphabeticalIndex.css';\nimport { getProductImages } from '../data/ProductImages';\nimport ProductSlider from \"../components/ProductSlider\";\nimport ProductThumbnail from \"../components/ProductThumbnail\";\nimport SliderHeader from \"../components/SliderHeader\";\n\nconst AlphabticalIndex = () => {\n  const [ProductImages, setProductImages] = useState([]);\n  const [showPopover, setShowPopover] = useState(false);\n  const [sliderIsOpen, setSliderIsOpen] = useState(false);\n  const [openOnSlide, setOpenOnSlide] = useState(0);\n  const filteredImages = ProductImages.filter(pi => pi.pageName === \"AI\");\n  useIonViewWillEnter(() => {\n    const pimg = getProductImages();\n    setProductImages(pimg);\n  });\n\n  const handleOpenSlider = slideToOpen => {\n    setOpenOnSlide(slideToOpen);\n    setSliderIsOpen(true);\n  };\n\n  const handleCloseSlider = () => setSliderIsOpen(false);\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    id: \"AlphabeticalIndexes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SliderHeader, {\n    handleCloseSlider: handleCloseSlider,\n    slidesID: \"Alphabetical Indexes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    class: \"smallInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    class: \"smallInfoLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Alphabetical Index\"))), /*#__PURE__*/React.createElement(IonCol, {\n    class: \"smallInfoRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"1 Photos\")))), /*#__PURE__*/React.createElement(IonList, {\n    id: \"productGalleryls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, filteredImages.map((image, index) => /*#__PURE__*/React.createElement(ProductThumbnail, {\n    key: image.id,\n    slideIndex: index,\n    id: image.id,\n    src: image.src,\n    handleOpenSlider: handleOpenSlider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))), sliderIsOpen && /*#__PURE__*/React.createElement(ProductSlider, {\n    slides: filteredImages,\n    openOnSlide: openOnSlide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default AlphabticalIndex;","map":{"version":3,"sources":["/Users/Peter/Documents/GitHub/Ionic-Frank-Allart-App/src/pages/AlphabeticalIndex.tsx"],"names":["IonPage","IonContent","useIonViewWillEnter","IonList","IonLabel","IonCol","IonRow","React","useState","getProductImages","ProductSlider","ProductThumbnail","SliderHeader","AlphabticalIndex","ProductImages","setProductImages","showPopover","setShowPopover","sliderIsOpen","setSliderIsOpen","openOnSlide","setOpenOnSlide","filteredImages","filter","pi","pageName","pimg","handleOpenSlider","slideToOpen","handleCloseSlider","map","image","index","id","src"],"mappings":"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","sourcesContent":["import { IonPage, \n  IonHeader, \n  IonToolbar, \n  IonButtons, \n  IonTitle, \n  IonContent, \n  IonButton, \n  IonIcon, \n  IonPopover, \n  useIonViewWillEnter, \n  IonList, \n  IonLabel, \n  IonCol,\n  IonRow,\n  IonItem} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport '../styles/AlphabeticalIndex.css';\n  import { Images, getProductImages } from '../data/ProductImages';\nimport ProductSlider from \"../components/ProductSlider\";\nimport ProductThumbnail from \"../components/ProductThumbnail\";\nimport SliderHeader from \"../components/SliderHeader\";\n\nconst AlphabticalIndex: React.FC = () => {\n  const [ProductImages, setProductImages] = useState<Images[]>([]);\n  const [showPopover, setShowPopover] = useState(false);\n  const [sliderIsOpen, setSliderIsOpen] = useState(false)\n  const [openOnSlide, setOpenOnSlide] = useState(0)\n  const filteredImages = ProductImages.filter((pi) => pi.pageName === \"AI\" )\n\n\n  useIonViewWillEnter(() => {\n    const pimg = getProductImages();\n    setProductImages(pimg);\n  });\n\n  const handleOpenSlider = (slideToOpen) => {\n    setOpenOnSlide(slideToOpen)\n    setSliderIsOpen(true)\n  }\n\n  const handleCloseSlider = () =>\n    setSliderIsOpen(false)\n\n    return (\n      \n        <IonPage id=\"AlphabeticalIndexes\">\n      <SliderHeader \n      handleCloseSlider ={handleCloseSlider}\n      slidesID = {\"Alphabetical Indexes\"}\n      />\n      <IonContent fullscreen>\n        <IonRow class=\"smallInfo\">\n        <IonCol class=\"smallInfoLeft\">\n        <IonLabel><p>Alphabetical Index</p></IonLabel>\n        </IonCol>\n        <IonCol class=\"smallInfoRight\">\n        <IonLabel><p>1 Photos</p></IonLabel>\n        </IonCol >\n        </IonRow>\n        <IonList id=\"productGalleryls\">\n        {filteredImages.map((image, index) => (\n            <ProductThumbnail\n              key={image.id}\n              slideIndex={index}\n              id={image.id}\n              src={image.src}\n              handleOpenSlider={handleOpenSlider}\n            />\n          ))}\n        </IonList>\n        {sliderIsOpen && (\n          <ProductSlider\n            slides={filteredImages}\n            openOnSlide={openOnSlide}\n            \n          />\n        )}\n      </IonContent>\n    </IonPage>\n    );\n};\nexport default AlphabticalIndex;"]},"metadata":{},"sourceType":"module"}